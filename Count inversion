Count inversions in an array
Problem Statement: Given an array of N integers, count the inversion of the array (using merge-sort).

What is an inversion of an array? Definition: for all i & j < size of array, if i < j then you have to find pair (A[i],A[j]) such that A[j] < A[i].

Example 1:
Input Format: N = 5, array[] = {1,2,3,4,5}
Result: 0
Explanation: we have a sorted array and the sorted array has 0 inversions as for i < j you will never find a pair such that A[j] < A[i]. More clear example: 2 has index 1 and 5 has index 4 now 1 < 5 but 2 < 5 so this is not an inversion.

Example 2:
Input Format: N = 5, array[] = {5,4,3,2,1}
Result: 10
Explanation: we have a reverse sorted array and we will get the maximum inversions as for i < j we will always find a pair such that A[j] < A[i]. 
Example: 5 has index 0 and 3 has index 2 now (5,3) pair is inversion as 0 < 2 and 5 > 3 which will satisfy out conditions and for reverse sorted array we will get
maximum inversions and that is (n)*(n-1) / 2.For above given array there is 4 + 3 + 2 + 1 = 10 inversions.


cpp code:

#include <bits/stdc++.h> 

int merge(long long *arr,int l,int mid ,int h){

    vector<long long>temp;
    int i=l;
    int j=mid+1;
    
    int cnt=0;
    
    while(i<=mid && j<=h){
        if(arr[i]<=arr[j]){
            temp.push_back(arr[i]);
            i++;

        }
        else{
            //inversion exist
            cnt+=mid-i+1;

            temp.push_back(arr[j]);
            j++;    
        }
        
    }

    while(i<=mid){
        temp.push_back(arr[i++]);
    }

     while(j<=h){
        temp.push_back(arr[j++]);
    }

    //copy value from temp to original array

    for(int i=l;i<=h;i++){
        arr[i]=temp[i-l];
    }


    return cnt;


}

long long mergesort(long long *arr,int l,int h){
    while(l<h){
        int cnt=0;
        int mid=(l)+(h-l)/2;
        cnt +=mergesort(arr,l,mid);
        cnt +=mergesort(arr,mid+1,h);
        cnt +=merge(arr,l,mid,h);
        return cnt;
    }
    return 0;

}


long long getInversions(long long *arr, int n){
    // Write your code here.
    return mergesort(arr,0,n-1);
}
